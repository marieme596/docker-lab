apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend
spec:
  replicas: 3
  selector:
    matchLabels:
      app: backend
  template:
    metadata:
      labels:
        app: backend
    spec:
      initContainers:
        - name: db-available
          image: busybox:1.28
          command: ['sh', '-c', 'until nc -z database 3306 ; do echo "Waiting for database..."; sleep 4; done;']
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: app
                    operator: In
                    values:
                      - backend
              topologyKey: "kubernetes.io/hostname"
      containers:
        - name: backend
          image: marieme27/flask-app:latest
          ports:
            - containerPort: 5000
          resources:
            requests:
              memory: "64Mi"
              cpu: "250m"
            limits:
              memory: "128Mi"
              cpu: "500m"
          livenessProbe:
            httpGet:
              path: /health/live  
              port: 5000          
            initialDelaySeconds: 20  
            periodSeconds: 5        
            timeoutSeconds: 5        
            failureThreshold: 3       
            successThreshold: 1      
          readinessProbe:
            httpGet:
              path: /health/ready    
              port: 5000
            initialDelaySeconds: 20    
            periodSeconds: 5         
            timeoutSeconds: 3         
            failureThreshold: 3       
            successThreshold: 1
          env:
            - name: MYSQL_HOST
              valueFrom:
                configMapKeyRef:
                  name: mysql-config 
                  key: mysql-host
            - name: MYSQL_DB
              valueFrom:
                configMapKeyRef:
                  name: mysql-config 
                  key: mysql-database
            - name: MYSQL_USER
              valueFrom:
                secretKeyRef:
                  name: mysql-secret
                  key: mysql-user
            - name: MYSQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mysql-secret
                  key: mysql-password